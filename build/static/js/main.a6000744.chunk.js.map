{"version":3,"sources":["components/AddContactForm.js","services/contactServices.js","components/Contacts.js","components/Notification.js","App.js","index.js"],"names":["AddContactForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","value","onChange","type","baseUrl","contactServices","get","axios","then","promise","data","post","newPerson","put","person","id","del","delete","Contact","delContact","setNotification","name","number","onClick","ContactsTable","persons","setPersons","setError","window","confirm","catch","error","setTimeout","filter","length","map","Search","searchStr","handleSearch","Contacts","Notification","message","isError","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","width","className","App","useState","notification","errorOcurred","useEffect","contacts","setNewName","setNewNumber","setSearchStr","personsToShow","toLowerCase","includes","event","preventDefault","newPersonName","trim","split","w","toUpperCase","substr","join","nanoid","new_person","p","alert","response","concat","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6000744.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AddContactForm = ({\r\n  addPerson, newName, handleNewName, newNumber, handleNewNumber\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Add a Contact:</h2>\r\n      <form onSubmit={addPerson}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Name: </td><td><input value={newName} onChange={handleNewName}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Number:&nbsp;</td><td><input value={newNumber} onChange={handleNewNumber}/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div><button type=\"submit\">add</button></div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddContactForm","import axios from 'axios'\r\n\r\nconst baseUrl = 'api/persons'\r\n\r\nconst get = () => {\r\n    const response = axios.get(baseUrl)\r\n    return response.then(promise => {\r\n        //console.log(promise);\r\n        return promise.data\r\n    })\r\n}\r\n\r\nconst post = (newPerson) => {\r\n    const response = axios.post(baseUrl, newPerson)\r\n    return response.then(promise => promise.data)\r\n}\r\n\r\nconst put = (person) => {\r\n    const response = axios.put(`${baseUrl}/${person.id}`, person)\r\n    return response.then(promise => promise.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst contactServices = {\r\n    get,\r\n    post,\r\n    put,\r\n    del\r\n}\r\n\r\nexport default contactServices","import React from 'react'\r\nimport contactServices from '../services/contactServices'\r\n\r\nconst Contact = ({ person, delContact, setNotification }) => {\r\n\r\n  return (\r\n    <tr>\r\n      <td>{person.name}&emsp;</td>\r\n      <td>{person.number}&emsp;</td>\r\n      <td><button onClick={delContact(person.id, person.name)}>Delete</button></td>\r\n    </tr>\r\n  )\r\n\r\n}\r\n\r\nconst ContactsTable = ({ persons, setPersons, setNotification, setError }) => {\r\n\r\n  const delContact = (id, name) => {\r\n    return () => {\r\n      if (window.confirm(`Are you sure you want to delete ${name}?`)) {\r\n        contactServices.del(id).catch(error => {\r\n          setError(true)\r\n          setNotification(`Information of ${name} has already been removed from server`)\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n            setError(false)\r\n          }, 4000)\r\n        })\r\n        setPersons(persons.filter(person => person.id !== id))\r\n      }\r\n    }\r\n  }\r\n    \r\n  \r\n  if (persons.length === 0) {\r\n    return (\r\n      <p>No Contacts Found</p>\r\n    )\r\n  } else return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n        <td><strong>Names:</strong></td>\r\n        <td><strong>Numbers:</strong></td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {persons.map(person =>\r\n          <Contact key={person.id} person={person} delContact={delContact}/>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst Search = ({ searchStr, handleSearch }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        Search by name:&ensp;<input value={searchStr} onChange={handleSearch}/>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contacts = ({ persons, setPersons, searchStr, handleSearch, setNotification, setError }) =>\r\n    <div>\r\n      <h2>Contact List:</h2>\r\n      <Search searchStr={searchStr} handleSearch={handleSearch} />\r\n      <ContactsTable persons={persons} setPersons={setPersons} setNotification={setNotification} setError={setError}/>\r\n    </div>\r\n\r\nexport default Contacts","import React from \"react\";\r\n\r\nconst Notification = ({ message, isError }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    const style = {\r\n        color: 'blue',\r\n        background: 'lightgray',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n        width: 300,\r\n    }\r\n\r\n    if (isError) {\r\n        style.color = 'red'\r\n    }\r\n\r\n    return (\r\n        <div style={style} className=\"notification\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport AddContactForm from './components/AddContactForm'\r\nimport Contacts from './components/Contacts'\r\nimport contactServices from './services/contactServices'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [notification, setNotification] = useState(null)\r\n  const [errorOcurred, setError] = useState(false)\r\n  \r\n  const contactAddedNotification = (person) => {\r\n    setNotification(`Added ${person.name}`)\r\n    setTimeout(() => setNotification(null), 5000)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    contactServices.get().then(contacts => {\r\n    //console.log(contacts)\r\n    setPersons(contacts)\r\n    })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    let newPersonName = newName.trim()\r\n    if (newPersonName.length === 0) {\r\n        setNewName('')\r\n        return\r\n    }\r\n\r\n    newPersonName = newPersonName.split(' ').map(w =>\r\n      w[0].toUpperCase() + w.substr(1).toLowerCase()\r\n    ).join(' ')\r\n\r\n    const newPerson = {\r\n      name: newPersonName,\r\n      number: newNumber,\r\n      id: nanoid()\r\n    }\r\n\r\n    for (let person of persons) {\r\n      if (person.name === newPersonName) {\r\n        if (window.confirm(`${newName} is already added to phonebook. Do you want to replace the number?`)) {\r\n          newPerson.id = person.id\r\n          contactServices.put(newPerson).then(new_person => {\r\n            setPersons(persons.map(p => p.id !== new_person.id ? p : new_person))\r\n            setNotification(`Updated ${person.name}'s number`)\r\n            setTimeout(() => setNotification(null), 4000)\r\n          }).catch(error =>\r\n            alert('There was an error contacting the database')\r\n          )\r\n        } else {\r\n          setNewName('')\r\n          setNewNumber('')\r\n          return\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    contactServices.post(newPerson).then(response => {\r\n        setPersons(persons.concat(response))\r\n        setNewNumber('')\r\n        setNewName('')\r\n        contactAddedNotification(response)\r\n      })\r\n\r\n  }\r\n\r\n  const [newName, setNewName] = useState('')\r\n  const handleNewName = (event) =>\r\n    setNewName(event.target.value)\r\n  \r\n  const [newNumber, setNewNumber] = useState('')\r\n  const handleNewNumber = (event) =>\r\n    setNewNumber(event.target.value)\r\n  \r\n  const [searchStr, setSearchStr] = useState('')\r\n  const handleSearch = (event) =>\r\n    setSearchStr(event.target.value)\r\n  \r\n  let personsToShow = persons\r\n  if (searchStr.length > 0) {\r\n    personsToShow = persons.filter(person =>\r\n      person.name.toLowerCase().includes(searchStr.toLowerCase())\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phone Book</h1>\r\n      <Notification message={notification} isError={errorOcurred}/>\r\n      <AddContactForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        handleNewName={handleNewName}\r\n        newNumber={newNumber}\r\n        handleNewNumber={handleNewNumber}\r\n      />\r\n      <Contacts\r\n        persons={personsToShow}\r\n        setPersons={setPersons}\r\n        searchStr={searchStr}\r\n        handleSearch={handleSearch}\r\n        setNotification={setNotification}\r\n        setError={setError}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}